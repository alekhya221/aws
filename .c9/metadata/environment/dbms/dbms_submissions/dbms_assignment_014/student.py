{"filter":false,"title":"student.py","tooltip":"/dbms/dbms_submissions/dbms_assignment_014/student.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":111,"column":53},"end":{"row":112,"column":0},"action":"insert","lines":["",""],"id":2155}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":23},"action":"insert","lines":["count = Student.count()"],"id":2156}],[{"start":{"row":112,"column":23},"end":{"row":112,"column":24},"action":"insert","lines":["]"],"id":2157},{"start":{"row":112,"column":24},"end":{"row":112,"column":25},"action":"insert","lines":["]"]},{"start":{"row":112,"column":25},"end":{"row":112,"column":26},"action":"insert","lines":["]"]}],[{"start":{"row":112,"column":25},"end":{"row":112,"column":26},"action":"remove","lines":["]"],"id":2158},{"start":{"row":112,"column":24},"end":{"row":112,"column":25},"action":"remove","lines":["]"]},{"start":{"row":112,"column":23},"end":{"row":112,"column":24},"action":"remove","lines":["]"]},{"start":{"row":112,"column":22},"end":{"row":112,"column":23},"action":"remove","lines":[")"]}],[{"start":{"row":112,"column":22},"end":{"row":112,"column":23},"action":"insert","lines":[")"],"id":2159}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":23},"action":"remove","lines":["count = Student.count()"],"id":2160}],[{"start":{"row":111,"column":53},"end":{"row":112,"column":0},"action":"remove","lines":["",""],"id":2161}],[{"start":{"row":112,"column":32},"end":{"row":113,"column":0},"action":"insert","lines":["",""],"id":2162}],[{"start":{"row":113,"column":0},"end":{"row":113,"column":23},"action":"insert","lines":["count = Student.count()"],"id":2163}],[{"start":{"row":114,"column":15},"end":{"row":114,"column":16},"action":"remove","lines":["e"],"id":2164},{"start":{"row":114,"column":14},"end":{"row":114,"column":15},"action":"remove","lines":["g"]},{"start":{"row":114,"column":13},"end":{"row":114,"column":14},"action":"remove","lines":["a"]},{"start":{"row":114,"column":12},"end":{"row":114,"column":13},"action":"remove","lines":["_"]},{"start":{"row":114,"column":11},"end":{"row":114,"column":12},"action":"remove","lines":["f"]},{"start":{"row":114,"column":10},"end":{"row":114,"column":11},"action":"remove","lines":["o"]},{"start":{"row":114,"column":9},"end":{"row":114,"column":10},"action":"remove","lines":["_"]},{"start":{"row":114,"column":8},"end":{"row":114,"column":9},"action":"remove","lines":["m"]},{"start":{"row":114,"column":7},"end":{"row":114,"column":8},"action":"remove","lines":["u"]},{"start":{"row":114,"column":6},"end":{"row":114,"column":7},"action":"remove","lines":["s"]}],[{"start":{"row":114,"column":6},"end":{"row":114,"column":7},"action":"insert","lines":["c"],"id":2165},{"start":{"row":114,"column":7},"end":{"row":114,"column":8},"action":"insert","lines":["o"]},{"start":{"row":114,"column":8},"end":{"row":114,"column":9},"action":"insert","lines":["u"]},{"start":{"row":114,"column":9},"end":{"row":114,"column":10},"action":"insert","lines":["n"]},{"start":{"row":114,"column":10},"end":{"row":114,"column":11},"action":"insert","lines":["t"]}],[{"start":{"row":113,"column":0},"end":{"row":113,"column":1},"action":"insert","lines":["#"],"id":2166}],[{"start":{"row":113,"column":24},"end":{"row":114,"column":0},"action":"insert","lines":["",""],"id":2167}],[{"start":{"row":114,"column":0},"end":{"row":114,"column":28},"action":"insert","lines":["count = Student.count('age')"],"id":2168}],[{"start":{"row":114,"column":28},"end":{"row":115,"column":0},"action":"insert","lines":["",""],"id":2169}],[{"start":{"row":115,"column":0},"end":{"row":115,"column":54},"action":"insert","lines":["count = Student.count('age', score__gt=30, age__lt=30)"],"id":2170}],[{"start":{"row":114,"column":0},"end":{"row":114,"column":1},"action":"insert","lines":["#"],"id":2171}],[{"start":{"row":104,"column":29},"end":{"row":104,"column":30},"action":"remove","lines":["\""],"id":2172},{"start":{"row":104,"column":28},"end":{"row":104,"column":29},"action":"remove","lines":["e"]},{"start":{"row":104,"column":27},"end":{"row":104,"column":28},"action":"remove","lines":["n"]},{"start":{"row":104,"column":26},"end":{"row":104,"column":27},"action":"remove","lines":["o"]},{"start":{"row":104,"column":25},"end":{"row":104,"column":26},"action":"remove","lines":["N"]},{"start":{"row":104,"column":24},"end":{"row":104,"column":25},"action":"remove","lines":["\""]},{"start":{"row":104,"column":23},"end":{"row":104,"column":24},"action":"remove","lines":["="]}],[{"start":{"row":114,"column":0},"end":{"row":114,"column":1},"action":"remove","lines":["#"],"id":2173}],[{"start":{"row":115,"column":0},"end":{"row":115,"column":1},"action":"insert","lines":["#"],"id":2174}],[{"start":{"row":108,"column":0},"end":{"row":108,"column":2},"action":"insert","lines":["\"\""],"id":2175}],[{"start":{"row":108,"column":2},"end":{"row":108,"column":3},"action":"insert","lines":["\""],"id":2176}],[{"start":{"row":116,"column":12},"end":{"row":117,"column":0},"action":"insert","lines":["",""],"id":2177}],[{"start":{"row":117,"column":0},"end":{"row":117,"column":2},"action":"insert","lines":["\"\""],"id":2178}],[{"start":{"row":117,"column":2},"end":{"row":117,"column":3},"action":"insert","lines":["\""],"id":2179}],[{"start":{"row":39,"column":30},"end":{"row":39,"column":31},"action":"remove","lines":["\""],"id":2180},{"start":{"row":39,"column":29},"end":{"row":39,"column":30},"action":"remove","lines":["e"]},{"start":{"row":39,"column":28},"end":{"row":39,"column":29},"action":"remove","lines":["n"]},{"start":{"row":39,"column":27},"end":{"row":39,"column":28},"action":"remove","lines":["o"]},{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["N"]}],[{"start":{"row":39,"column":25},"end":{"row":39,"column":26},"action":"remove","lines":["\""],"id":2181},{"start":{"row":39,"column":24},"end":{"row":39,"column":25},"action":"remove","lines":["="]}],[{"start":{"row":39,"column":24},"end":{"row":39,"column":25},"action":"insert","lines":["="],"id":2182},{"start":{"row":39,"column":25},"end":{"row":39,"column":26},"action":"insert","lines":["N"]},{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"insert","lines":["o"]}],[{"start":{"row":39,"column":27},"end":{"row":39,"column":28},"action":"insert","lines":["n"],"id":2183},{"start":{"row":39,"column":28},"end":{"row":39,"column":29},"action":"insert","lines":["e"]}],[{"start":{"row":58,"column":52},"end":{"row":59,"column":0},"action":"insert","lines":["",""],"id":2184},{"start":{"row":59,"column":0},"end":{"row":59,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":38,"column":4},"end":{"row":108,"column":0},"action":"remove","lines":["@staticmethod","    def aggregate(method=None,field=\"\",**kwargs):","        #print(kwargs)","        list = ['age','score','student_id','']","        multiple_values = []","        ","        if field not in list:","            raise InvalidField","        for k,v in kwargs.items():","            x = k.split('__')","            if x[0] not in list:","                raise InvalidField","            ","            op = {'lt':'<','gt':'>','lte':'<=','gte':'>=','neq':'<>','eq':'='}","            ","            if len(x) == 1:","                val = \"{} {} '{}'\".format(x[0],op['eq'],v)","                ","            elif x[1] == 'in':","                v = tuple(v)","                val = \"{} {} {}\".format(x[0],'IN',v)","                ","            elif x[1]=='contains':","                val = \"{} {} '%{}%'\".format(x[0],'LIKE',v)","            else:","                val = \"{} {} '{}'\".format(x[0],op[x[1]],v)","                ","            #print(val)","            multiple_values.append(val)","            ","        a = ' AND '.join(multiple_values)","        #print(a)","        if a==\"\":","            data = read_data(\"select {}({}) from Student\".format(method,field))","        else:","            data = read_data(\"select {}({}) from Student where {}\".format(method,field,a))","            ","        return data[0][0]   ","        ","    ","    ","    ","    ","    ","    ","    ","    @classmethod","    def avg(cls,field,**kwargs):","        ans = cls.aggregate('AVG',field,**kwargs)","        return ans","","    @classmethod","    def min(cls,field,**kwargs):","        ans = cls.aggregate('MIN',field,**kwargs)","        return ans","        ","    @classmethod","    def max(cls,field,**kwargs):","        ans = cls.aggregate('MAX',field,**kwargs)","        return ans","    ","    @classmethod","    def sum(cls,field,**kwargs):","        ans = cls.aggregate('SUM',field,**kwargs)","        return ans","        ","    @classmethod","    def count(cls,field,**kwargs):","        ans = cls.aggregate('COUNT',field,**kwargs)","        return ans",""],"id":2185}],[{"start":{"row":160,"column":0},"end":{"row":230,"column":0},"action":"insert","lines":["@staticmethod","    def aggregate(method=None,field=\"\",**kwargs):","        #print(kwargs)","        list = ['age','score','student_id','']","        multiple_values = []","        ","        if field not in list:","            raise InvalidField","        for k,v in kwargs.items():","            x = k.split('__')","            if x[0] not in list:","                raise InvalidField","            ","            op = {'lt':'<','gt':'>','lte':'<=','gte':'>=','neq':'<>','eq':'='}","            ","            if len(x) == 1:","                val = \"{} {} '{}'\".format(x[0],op['eq'],v)","                ","            elif x[1] == 'in':","                v = tuple(v)","                val = \"{} {} {}\".format(x[0],'IN',v)","                ","            elif x[1]=='contains':","                val = \"{} {} '%{}%'\".format(x[0],'LIKE',v)","            else:","                val = \"{} {} '{}'\".format(x[0],op[x[1]],v)","                ","            #print(val)","            multiple_values.append(val)","            ","        a = ' AND '.join(multiple_values)","        #print(a)","        if a==\"\":","            data = read_data(\"select {}({}) from Student\".format(method,field))","        else:","            data = read_data(\"select {}({}) from Student where {}\".format(method,field,a))","            ","        return data[0][0]   ","        ","    ","    ","    ","    ","    ","    ","    ","    @classmethod","    def avg(cls,field,**kwargs):","        ans = cls.aggregate('AVG',field,**kwargs)","        return ans","","    @classmethod","    def min(cls,field,**kwargs):","        ans = cls.aggregate('MIN',field,**kwargs)","        return ans","        ","    @classmethod","    def max(cls,field,**kwargs):","        ans = cls.aggregate('MAX',field,**kwargs)","        return ans","    ","    @classmethod","    def sum(cls,field,**kwargs):","        ans = cls.aggregate('SUM',field,**kwargs)","        return ans","        ","    @classmethod","    def count(cls,field,**kwargs):","        ans = cls.aggregate('COUNT',field,**kwargs)","        return ans",""],"id":2186}],[{"start":{"row":159,"column":0},"end":{"row":159,"column":2},"action":"insert","lines":["\"\""],"id":2187}],[{"start":{"row":159,"column":2},"end":{"row":159,"column":3},"action":"insert","lines":["\""],"id":2188}],[{"start":{"row":200,"column":1},"end":{"row":200,"column":2},"action":"remove","lines":[" "],"id":2189},{"start":{"row":200,"column":0},"end":{"row":200,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":200,"column":0},"end":{"row":200,"column":1},"action":"insert","lines":["\""],"id":2190},{"start":{"row":200,"column":1},"end":{"row":200,"column":2},"action":"insert","lines":["\""]},{"start":{"row":200,"column":2},"end":{"row":200,"column":3},"action":"insert","lines":["\""]}],[{"start":{"row":81,"column":0},"end":{"row":154,"column":0},"action":"remove","lines":["@staticmethod    ","    def aggregations(agg = None,field = \"\", **kwargs):","        list = ['student_id','name','age','score','']","        ","        multiple_values = []","            ","        if field not in list:","                raise InvalidField","                ","            ","        for i,j in kwargs.items():","            ","            a = i.split('__')","            ","            if a[0] not in list:","                raise InvalidField","                ","            oper = {'gt':'>', 'lt':'<', 'lte':'<=', 'gte':'>=', 'neq':'<>', 'eq' : '='}","            ","            if len(a) == 1:","                val = \"{} {} '{}' \".format(a[0],oper['eq'],j)","                ","            elif a[1] == 'in':","                j = tuple(j)","                val = \"{} {} {}\".format(a[0],'IN',j)","            ","            elif a[1] == 'contains':","                val = \"{} {} '%{}%' \".format(a[0],'LIKE',j)","                ","            else:","                val = \"{} {} '{}' \".format(a[0],oper[a[1]],j)","                ","            multiple_values.append(val)","            ","        x = ' AND '.join(multiple_values)","        ","        if x == \"\":","            data = read_data(\"SELECT {}({}) FROM Student\".format(agg,field))","        else:","            data = read_data(\"SELECT {}({}) FROM Student where {}\".format(agg,field,x))","            ","        ","        return data[0][0]","        ","    @classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans",""],"id":2191}],[{"start":{"row":36,"column":26},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":2192},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]},{"start":{"row":37,"column":8},"end":{"row":38,"column":0},"action":"insert","lines":["",""]},{"start":{"row":38,"column":0},"end":{"row":38,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":38,"column":4},"end":{"row":38,"column":8},"action":"remove","lines":["    "],"id":2193}],[{"start":{"row":38,"column":4},"end":{"row":111,"column":0},"action":"insert","lines":["@staticmethod    ","    def aggregations(agg = None,field = \"\", **kwargs):","        list = ['student_id','name','age','score','']","        ","        multiple_values = []","            ","        if field not in list:","                raise InvalidField","                ","            ","        for i,j in kwargs.items():","            ","            a = i.split('__')","            ","            if a[0] not in list:","                raise InvalidField","                ","            oper = {'gt':'>', 'lt':'<', 'lte':'<=', 'gte':'>=', 'neq':'<>', 'eq' : '='}","            ","            if len(a) == 1:","                val = \"{} {} '{}' \".format(a[0],oper['eq'],j)","                ","            elif a[1] == 'in':","                j = tuple(j)","                val = \"{} {} {}\".format(a[0],'IN',j)","            ","            elif a[1] == 'contains':","                val = \"{} {} '%{}%' \".format(a[0],'LIKE',j)","                ","            else:","                val = \"{} {} '{}' \".format(a[0],oper[a[1]],j)","                ","            multiple_values.append(val)","            ","        x = ' AND '.join(multiple_values)","        ","        if x == \"\":","            data = read_data(\"SELECT {}({}) FROM Student\".format(agg,field))","        else:","            data = read_data(\"SELECT {}({}) FROM Student where {}\".format(agg,field,x))","            ","        ","        return data[0][0]","        ","    @classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans",""],"id":2194}],[{"start":{"row":159,"column":2},"end":{"row":159,"column":3},"action":"remove","lines":["\""],"id":2195},{"start":{"row":159,"column":1},"end":{"row":159,"column":2},"action":"remove","lines":["\""]},{"start":{"row":159,"column":0},"end":{"row":159,"column":1},"action":"remove","lines":["\""]}],[{"start":{"row":154,"column":2},"end":{"row":154,"column":3},"action":"remove","lines":["\""],"id":2196},{"start":{"row":154,"column":1},"end":{"row":154,"column":2},"action":"remove","lines":["\""]},{"start":{"row":154,"column":0},"end":{"row":154,"column":1},"action":"remove","lines":["\""]}],[{"start":{"row":206,"column":1},"end":{"row":206,"column":3},"action":"insert","lines":["\"\""],"id":2197}],[{"start":{"row":206,"column":3},"end":{"row":206,"column":4},"action":"insert","lines":["\""],"id":2198}],[{"start":{"row":234,"column":0},"end":{"row":234,"column":2},"action":"insert","lines":["\"\""],"id":2199}],[{"start":{"row":234,"column":2},"end":{"row":234,"column":3},"action":"insert","lines":["\""],"id":2200}],[{"start":{"row":257,"column":3},"end":{"row":258,"column":0},"action":"insert","lines":["",""],"id":2201}],[{"start":{"row":257,"column":3},"end":{"row":258,"column":0},"action":"remove","lines":["",""],"id":2202}],[{"start":{"row":257,"column":3},"end":{"row":258,"column":0},"action":"insert","lines":["",""],"id":2203}],[{"start":{"row":202,"column":5},"end":{"row":203,"column":4},"action":"remove","lines":["","    "],"id":2204},{"start":{"row":202,"column":4},"end":{"row":202,"column":5},"action":"remove","lines":[" "]},{"start":{"row":202,"column":3},"end":{"row":202,"column":4},"action":"remove","lines":[" "]},{"start":{"row":202,"column":2},"end":{"row":202,"column":3},"action":"remove","lines":["\""]}],[{"start":{"row":202,"column":1},"end":{"row":202,"column":2},"action":"remove","lines":["\""],"id":2205},{"start":{"row":202,"column":0},"end":{"row":202,"column":1},"action":"remove","lines":["\""]}],[{"start":{"row":205,"column":3},"end":{"row":205,"column":4},"action":"remove","lines":["\""],"id":2206},{"start":{"row":205,"column":2},"end":{"row":205,"column":3},"action":"remove","lines":["\""]},{"start":{"row":205,"column":1},"end":{"row":205,"column":2},"action":"remove","lines":["\""]},{"start":{"row":205,"column":0},"end":{"row":205,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":201,"column":0},"end":{"row":201,"column":1},"action":"remove","lines":[" "],"id":2207},{"start":{"row":200,"column":8},"end":{"row":201,"column":3},"action":"remove","lines":["","   "]}],[{"start":{"row":201,"column":0},"end":{"row":201,"column":2},"action":"insert","lines":["\"\""],"id":2208}],[{"start":{"row":201,"column":2},"end":{"row":201,"column":3},"action":"insert","lines":["\""],"id":2209}],[{"start":{"row":206,"column":0},"end":{"row":206,"column":1},"action":"remove","lines":[" "],"id":2210}],[{"start":{"row":205,"column":0},"end":{"row":205,"column":1},"action":"remove","lines":[" "],"id":2211}],[{"start":{"row":205,"column":0},"end":{"row":205,"column":2},"action":"insert","lines":["\"\""],"id":2212}],[{"start":{"row":205,"column":2},"end":{"row":205,"column":3},"action":"insert","lines":["\""],"id":2213}],[{"start":{"row":159,"column":0},"end":{"row":160,"column":0},"action":"remove","lines":["",""],"id":2214},{"start":{"row":158,"column":0},"end":{"row":159,"column":0},"action":"remove","lines":["",""]},{"start":{"row":157,"column":4},"end":{"row":158,"column":0},"action":"remove","lines":["",""]},{"start":{"row":157,"column":0},"end":{"row":157,"column":4},"action":"remove","lines":["    "]},{"start":{"row":156,"column":8},"end":{"row":157,"column":0},"action":"remove","lines":["",""]},{"start":{"row":156,"column":4},"end":{"row":156,"column":8},"action":"remove","lines":["    "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":4},"action":"remove","lines":["    "]},{"start":{"row":155,"column":0},"end":{"row":156,"column":0},"action":"remove","lines":["",""]},{"start":{"row":154,"column":0},"end":{"row":155,"column":0},"action":"remove","lines":["",""]},{"start":{"row":153,"column":0},"end":{"row":154,"column":0},"action":"remove","lines":["",""]},{"start":{"row":152,"column":0},"end":{"row":153,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":151,"column":0},"end":{"row":152,"column":0},"action":"remove","lines":["",""],"id":2215},{"start":{"row":150,"column":0},"end":{"row":151,"column":0},"action":"remove","lines":["",""]},{"start":{"row":149,"column":0},"end":{"row":150,"column":0},"action":"remove","lines":["",""]},{"start":{"row":148,"column":0},"end":{"row":149,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":147,"column":0},"end":{"row":148,"column":0},"action":"remove","lines":["",""],"id":2216},{"start":{"row":146,"column":0},"end":{"row":147,"column":0},"action":"remove","lines":["",""]},{"start":{"row":145,"column":0},"end":{"row":146,"column":0},"action":"remove","lines":["",""]},{"start":{"row":144,"column":0},"end":{"row":145,"column":0},"action":"remove","lines":["",""]},{"start":{"row":143,"column":0},"end":{"row":144,"column":0},"action":"remove","lines":["",""]},{"start":{"row":142,"column":0},"end":{"row":143,"column":0},"action":"remove","lines":["",""]},{"start":{"row":141,"column":0},"end":{"row":142,"column":0},"action":"remove","lines":["",""]},{"start":{"row":140,"column":0},"end":{"row":141,"column":0},"action":"remove","lines":["",""]},{"start":{"row":139,"column":0},"end":{"row":140,"column":0},"action":"remove","lines":["",""]},{"start":{"row":138,"column":0},"end":{"row":139,"column":0},"action":"remove","lines":["",""]},{"start":{"row":137,"column":0},"end":{"row":138,"column":0},"action":"remove","lines":["",""]},{"start":{"row":136,"column":0},"end":{"row":137,"column":0},"action":"remove","lines":["",""]},{"start":{"row":135,"column":0},"end":{"row":136,"column":0},"action":"remove","lines":["",""]},{"start":{"row":134,"column":0},"end":{"row":135,"column":0},"action":"remove","lines":["",""]},{"start":{"row":133,"column":0},"end":{"row":134,"column":0},"action":"remove","lines":["",""]},{"start":{"row":132,"column":0},"end":{"row":133,"column":0},"action":"remove","lines":["",""]},{"start":{"row":131,"column":0},"end":{"row":132,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":130,"column":0},"end":{"row":131,"column":0},"action":"remove","lines":["",""],"id":2217},{"start":{"row":129,"column":0},"end":{"row":130,"column":0},"action":"remove","lines":["",""]},{"start":{"row":128,"column":0},"end":{"row":129,"column":0},"action":"remove","lines":["",""]},{"start":{"row":127,"column":0},"end":{"row":128,"column":0},"action":"remove","lines":["",""]},{"start":{"row":126,"column":0},"end":{"row":127,"column":0},"action":"remove","lines":["",""]},{"start":{"row":125,"column":0},"end":{"row":126,"column":0},"action":"remove","lines":["",""]},{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"remove","lines":["",""]},{"start":{"row":123,"column":3},"end":{"row":124,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":128,"column":29},"end":{"row":128,"column":30},"action":"remove","lines":[","],"id":2218},{"start":{"row":128,"column":28},"end":{"row":128,"column":30},"action":"remove","lines":["''"]},{"start":{"row":128,"column":27},"end":{"row":128,"column":28},"action":"remove","lines":["e"]},{"start":{"row":128,"column":26},"end":{"row":128,"column":27},"action":"remove","lines":["r"]},{"start":{"row":128,"column":25},"end":{"row":128,"column":26},"action":"remove","lines":["o"]},{"start":{"row":128,"column":24},"end":{"row":128,"column":25},"action":"remove","lines":["c"]},{"start":{"row":128,"column":23},"end":{"row":128,"column":24},"action":"remove","lines":["s"]},{"start":{"row":128,"column":22},"end":{"row":128,"column":23},"action":"remove","lines":["'"]},{"start":{"row":128,"column":21},"end":{"row":128,"column":22},"action":"remove","lines":[","]},{"start":{"row":128,"column":20},"end":{"row":128,"column":21},"action":"remove","lines":["'"]},{"start":{"row":128,"column":19},"end":{"row":128,"column":20},"action":"remove","lines":["e"]},{"start":{"row":128,"column":18},"end":{"row":128,"column":19},"action":"remove","lines":["g"]},{"start":{"row":128,"column":17},"end":{"row":128,"column":18},"action":"remove","lines":["a"]},{"start":{"row":128,"column":16},"end":{"row":128,"column":17},"action":"remove","lines":["'"]}],[{"start":{"row":128,"column":16},"end":{"row":128,"column":17},"action":"insert","lines":["'"],"id":2219}],[{"start":{"row":128,"column":30},"end":{"row":128,"column":31},"action":"insert","lines":["n"],"id":2220},{"start":{"row":128,"column":31},"end":{"row":128,"column":32},"action":"insert","lines":["a"]},{"start":{"row":128,"column":32},"end":{"row":128,"column":33},"action":"insert","lines":["m"]},{"start":{"row":128,"column":33},"end":{"row":128,"column":34},"action":"insert","lines":["e"]}],[{"start":{"row":128,"column":35},"end":{"row":128,"column":36},"action":"insert","lines":[","],"id":2221},{"start":{"row":128,"column":36},"end":{"row":128,"column":37},"action":"insert","lines":["'"]},{"start":{"row":128,"column":37},"end":{"row":128,"column":38},"action":"insert","lines":["a"]},{"start":{"row":128,"column":38},"end":{"row":128,"column":39},"action":"insert","lines":["g"]},{"start":{"row":128,"column":39},"end":{"row":128,"column":40},"action":"insert","lines":["e"]}],[{"start":{"row":128,"column":40},"end":{"row":128,"column":41},"action":"insert","lines":["'"],"id":2222}],[{"start":{"row":128,"column":41},"end":{"row":128,"column":42},"action":"insert","lines":[","],"id":2223},{"start":{"row":128,"column":42},"end":{"row":128,"column":43},"action":"insert","lines":["'"]}],[{"start":{"row":128,"column":43},"end":{"row":128,"column":44},"action":"insert","lines":["s"],"id":2224},{"start":{"row":128,"column":44},"end":{"row":128,"column":45},"action":"insert","lines":["c"]},{"start":{"row":128,"column":45},"end":{"row":128,"column":46},"action":"insert","lines":["o"]},{"start":{"row":128,"column":46},"end":{"row":128,"column":47},"action":"insert","lines":["r"]},{"start":{"row":128,"column":47},"end":{"row":128,"column":48},"action":"insert","lines":["e"]}],[{"start":{"row":128,"column":48},"end":{"row":128,"column":49},"action":"insert","lines":["'"],"id":2225},{"start":{"row":128,"column":49},"end":{"row":128,"column":50},"action":"insert","lines":[","]},{"start":{"row":128,"column":50},"end":{"row":128,"column":51},"action":"insert","lines":["'"]}],[{"start":{"row":128,"column":51},"end":{"row":128,"column":52},"action":"insert","lines":["'"],"id":2226}],[{"start":{"row":38,"column":4},"end":{"row":112,"column":4},"action":"remove","lines":["@staticmethod    ","    def aggregations(agg = None,field = \"\", **kwargs):","        list = ['student_id','name','age','score','']","        ","        multiple_values = []","            ","        if field not in list:","                raise InvalidField","                ","            ","        for i,j in kwargs.items():","            ","            a = i.split('__')","            ","            if a[0] not in list:","                raise InvalidField","                ","            oper = {'gt':'>', 'lt':'<', 'lte':'<=', 'gte':'>=', 'neq':'<>', 'eq' : '='}","            ","            if len(a) == 1:","                val = \"{} {} '{}' \".format(a[0],oper['eq'],j)","                ","            elif a[1] == 'in':","                j = tuple(j)","                val = \"{} {} {}\".format(a[0],'IN',j)","            ","            elif a[1] == 'contains':","                val = \"{} {} '%{}%' \".format(a[0],'LIKE',j)","                ","            else:","                val = \"{} {} '{}' \".format(a[0],oper[a[1]],j)","                ","            multiple_values.append(val)","            ","        x = ' AND '.join(multiple_values)","        ","        if x == \"\":","            data = read_data(\"SELECT {}({}) FROM Student\".format(agg,field))","        else:","            data = read_data(\"SELECT {}({}) FROM Student where {}\".format(agg,field,x))","            ","        ","        return data[0][0]","        ","    @classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans","","    "],"id":2227}],[{"start":{"row":91,"column":0},"end":{"row":165,"column":4},"action":"insert","lines":["@staticmethod    ","    def aggregations(agg = None,field = \"\", **kwargs):","        list = ['student_id','name','age','score','']","        ","        multiple_values = []","            ","        if field not in list:","                raise InvalidField","                ","            ","        for i,j in kwargs.items():","            ","            a = i.split('__')","            ","            if a[0] not in list:","                raise InvalidField","                ","            oper = {'gt':'>', 'lt':'<', 'lte':'<=', 'gte':'>=', 'neq':'<>', 'eq' : '='}","            ","            if len(a) == 1:","                val = \"{} {} '{}' \".format(a[0],oper['eq'],j)","                ","            elif a[1] == 'in':","                j = tuple(j)","                val = \"{} {} {}\".format(a[0],'IN',j)","            ","            elif a[1] == 'contains':","                val = \"{} {} '%{}%' \".format(a[0],'LIKE',j)","                ","            else:","                val = \"{} {} '{}' \".format(a[0],oper[a[1]],j)","                ","            multiple_values.append(val)","            ","        x = ' AND '.join(multiple_values)","        ","        if x == \"\":","            data = read_data(\"SELECT {}({}) FROM Student\".format(agg,field))","        else:","            data = read_data(\"SELECT {}({}) FROM Student where {}\".format(agg,field,x))","            ","        ","        return data[0][0]","        ","    @classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans","","    "],"id":2228}],[{"start":{"row":90,"column":3},"end":{"row":91,"column":0},"action":"insert","lines":["",""],"id":2229}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":2},"action":"insert","lines":["\"\""],"id":2230}],[{"start":{"row":91,"column":2},"end":{"row":91,"column":3},"action":"insert","lines":["\""],"id":2231}],[{"start":{"row":167,"column":0},"end":{"row":167,"column":1},"action":"insert","lines":["\""],"id":2232},{"start":{"row":167,"column":1},"end":{"row":167,"column":2},"action":"insert","lines":["\""]},{"start":{"row":167,"column":2},"end":{"row":167,"column":3},"action":"insert","lines":["\""]}],[{"start":{"row":51,"column":0},"end":{"row":89,"column":0},"action":"remove","lines":["@staticmethod","    def aggregate(method=None,field=\"\",**kwargs):","        #print(kwargs)","        list = ['student_id','name','age','score','']","        multiple_values = []","        ","        if field not in list:","            raise InvalidField","        for k,v in kwargs.items():","            x = k.split('__')","            if x[0] not in list:","                raise InvalidField","            ","            op = {'lt':'<','gt':'>','lte':'<=','gte':'>=','neq':'<>','eq':'='}","            ","            if len(x) == 1:","                val = \"{} {} '{}'\".format(x[0],op['eq'],v)","                ","            elif x[1] == 'in':","                v = tuple(v)","                val = \"{} {} {}\".format(x[0],'IN',v)","                ","            elif x[1]=='contains':","                val = \"{} {} '%{}%'\".format(x[0],'LIKE',v)","            else:","                val = \"{} {} '{}'\".format(x[0],op[x[1]],v)","                ","            #print(val)","            multiple_values.append(val)","            ","        a = ' AND '.join(multiple_values)","        #print(a)","        if a==\"\":","            data = read_data(\"select {}({}) from Student\".format(method,field))","        else:","            data = read_data(\"select {}({}) from Student where {}\".format(method,field,a))","            ","        return data[0][0]   ",""],"id":2233}],[{"start":{"row":36,"column":26},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":2234},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":4},"end":{"row":37,"column":8},"action":"remove","lines":["    "],"id":2235}],[{"start":{"row":37,"column":4},"end":{"row":75,"column":0},"action":"insert","lines":["@staticmethod","    def aggregate(method=None,field=\"\",**kwargs):","        #print(kwargs)","        list = ['student_id','name','age','score','']","        multiple_values = []","        ","        if field not in list:","            raise InvalidField","        for k,v in kwargs.items():","            x = k.split('__')","            if x[0] not in list:","                raise InvalidField","            ","            op = {'lt':'<','gt':'>','lte':'<=','gte':'>=','neq':'<>','eq':'='}","            ","            if len(x) == 1:","                val = \"{} {} '{}'\".format(x[0],op['eq'],v)","                ","            elif x[1] == 'in':","                v = tuple(v)","                val = \"{} {} {}\".format(x[0],'IN',v)","                ","            elif x[1]=='contains':","                val = \"{} {} '%{}%'\".format(x[0],'LIKE',v)","            else:","                val = \"{} {} '{}'\".format(x[0],op[x[1]],v)","                ","            #print(val)","            multiple_values.append(val)","            ","        a = ' AND '.join(multiple_values)","        #print(a)","        if a==\"\":","            data = read_data(\"select {}({}) from Student\".format(method,field))","        else:","            data = read_data(\"select {}({}) from Student where {}\".format(method,field,a))","            ","        return data[0][0]   ",""],"id":2236}],[{"start":{"row":36,"column":26},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":2237},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":90,"column":2},"end":{"row":90,"column":3},"action":"remove","lines":["\""],"id":2238},{"start":{"row":90,"column":1},"end":{"row":90,"column":2},"action":"remove","lines":["\""]},{"start":{"row":90,"column":0},"end":{"row":90,"column":1},"action":"remove","lines":["\""]}],[{"start":{"row":92,"column":2},"end":{"row":92,"column":3},"action":"remove","lines":["\""],"id":2239},{"start":{"row":92,"column":1},"end":{"row":92,"column":2},"action":"remove","lines":["\""]},{"start":{"row":92,"column":0},"end":{"row":92,"column":1},"action":"remove","lines":["\""]},{"start":{"row":91,"column":8},"end":{"row":92,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":137,"column":4},"end":{"row":166,"column":0},"action":"remove","lines":["@classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans",""],"id":2240}],[{"start":{"row":75,"column":27},"end":{"row":75,"column":28},"action":"remove","lines":[" "],"id":2241},{"start":{"row":75,"column":27},"end":{"row":76,"column":0},"action":"insert","lines":["",""]},{"start":{"row":76,"column":0},"end":{"row":76,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":76,"column":4},"end":{"row":76,"column":8},"action":"remove","lines":["    "],"id":2242}],[{"start":{"row":76,"column":4},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":2243},{"start":{"row":77,"column":0},"end":{"row":77,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":77,"column":4},"end":{"row":106,"column":0},"action":"insert","lines":["@classmethod","    def avg(cls, field, **kwargs):","                ","        ans = cls.aggregations('AVG', field, **kwargs)","        return ans","        ","    @classmethod","    def min(cls, field, **kwargs):","        ","        ans = cls.aggregations('MIN', field, **kwargs)","        return ans","        ","    @classmethod","    def max(cls, field, **kwargs):","        ","        ans = cls.aggregations('MAX', field, **kwargs)","        return ans","        ","    @classmethod","    def sum(cls, field, **kwargs):","        ","        ans = cls.aggregations('SUM', field, **kwargs)","        return ans","        ","    @classmethod","    def count(cls, field = \"\",**kwargs):","        ","        ans = cls.aggregations('COUNT', field, **kwargs)","        return ans",""],"id":2244}],[{"start":{"row":80,"column":29},"end":{"row":80,"column":30},"action":"remove","lines":["s"],"id":2245},{"start":{"row":80,"column":28},"end":{"row":80,"column":29},"action":"remove","lines":["n"]},{"start":{"row":80,"column":27},"end":{"row":80,"column":28},"action":"remove","lines":["o"]},{"start":{"row":80,"column":26},"end":{"row":80,"column":27},"action":"remove","lines":["i"]},{"start":{"row":80,"column":25},"end":{"row":80,"column":26},"action":"remove","lines":["t"]}],[{"start":{"row":80,"column":25},"end":{"row":80,"column":26},"action":"insert","lines":["t"],"id":2246},{"start":{"row":80,"column":26},"end":{"row":80,"column":27},"action":"insert","lines":["e"]}],[{"start":{"row":86,"column":29},"end":{"row":86,"column":30},"action":"remove","lines":["s"],"id":2247},{"start":{"row":86,"column":28},"end":{"row":86,"column":29},"action":"remove","lines":["n"]},{"start":{"row":86,"column":27},"end":{"row":86,"column":28},"action":"remove","lines":["o"]},{"start":{"row":86,"column":26},"end":{"row":86,"column":27},"action":"remove","lines":["i"]},{"start":{"row":86,"column":25},"end":{"row":86,"column":26},"action":"remove","lines":["t"]},{"start":{"row":86,"column":24},"end":{"row":86,"column":25},"action":"remove","lines":["a"]}],[{"start":{"row":86,"column":24},"end":{"row":86,"column":25},"action":"insert","lines":["a"],"id":2248},{"start":{"row":86,"column":25},"end":{"row":86,"column":26},"action":"insert","lines":["t"]},{"start":{"row":86,"column":26},"end":{"row":86,"column":27},"action":"insert","lines":["e"]}],[{"start":{"row":92,"column":29},"end":{"row":92,"column":30},"action":"remove","lines":["s"],"id":2249},{"start":{"row":92,"column":28},"end":{"row":92,"column":29},"action":"remove","lines":["n"]},{"start":{"row":92,"column":27},"end":{"row":92,"column":28},"action":"remove","lines":["o"]},{"start":{"row":92,"column":26},"end":{"row":92,"column":27},"action":"remove","lines":["i"]},{"start":{"row":92,"column":25},"end":{"row":92,"column":26},"action":"remove","lines":["t"]}],[{"start":{"row":92,"column":25},"end":{"row":92,"column":26},"action":"insert","lines":["t"],"id":2250},{"start":{"row":92,"column":26},"end":{"row":92,"column":27},"action":"insert","lines":["e"]}],[{"start":{"row":98,"column":30},"end":{"row":98,"column":31},"action":"insert","lines":["\\"],"id":2251},{"start":{"row":98,"column":31},"end":{"row":98,"column":32},"action":"insert","lines":["\\"]},{"start":{"row":98,"column":32},"end":{"row":98,"column":33},"action":"insert","lines":["\\"]}],[{"start":{"row":98,"column":32},"end":{"row":98,"column":33},"action":"remove","lines":["\\"],"id":2252},{"start":{"row":98,"column":31},"end":{"row":98,"column":32},"action":"remove","lines":["\\"]},{"start":{"row":98,"column":30},"end":{"row":98,"column":31},"action":"remove","lines":["\\"]},{"start":{"row":98,"column":29},"end":{"row":98,"column":30},"action":"remove","lines":["s"]},{"start":{"row":98,"column":28},"end":{"row":98,"column":29},"action":"remove","lines":["n"]},{"start":{"row":98,"column":27},"end":{"row":98,"column":28},"action":"remove","lines":["o"]},{"start":{"row":98,"column":26},"end":{"row":98,"column":27},"action":"remove","lines":["i"]}],[{"start":{"row":98,"column":26},"end":{"row":98,"column":27},"action":"insert","lines":["e"],"id":2253}],[{"start":{"row":104,"column":29},"end":{"row":104,"column":30},"action":"remove","lines":["s"],"id":2254},{"start":{"row":104,"column":28},"end":{"row":104,"column":29},"action":"remove","lines":["n"]},{"start":{"row":104,"column":27},"end":{"row":104,"column":28},"action":"remove","lines":["o"]},{"start":{"row":104,"column":26},"end":{"row":104,"column":27},"action":"remove","lines":["i"]}],[{"start":{"row":104,"column":26},"end":{"row":104,"column":27},"action":"insert","lines":["e"],"id":2255}]]},"ace":{"folds":[],"scrolltop":19,"scrollleft":17.352941176470587,"selection":{"start":{"row":79,"column":16},"end":{"row":79,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":0,"state":"start","mode":"ace/mode/python"}},"timestamp":1590574328887,"hash":"c6a32f55919e7c6bb412766b2a4311eb821a353d"}